rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    match /players/{playerId} {
    allow read: if true;
    allow write: if request.auth != null && 
      exists(/databases/$(database)/documents/clubs/$(request.auth.uid)) &&
      request.resource.data.clubId == request.auth.uid;
  }
    
    function isClub() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/clubs/$(request.auth.uid));
    }
    
    function isFan() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/fans/$(request.auth.uid));
    }
    
    match /matches/{matchId} {
      // Anyone can read match data
      allow read: if true;
      
      // For debugging: allow all authenticated users to update matches
      allow update: if isAuthenticated();
      
      // Clubs can create matches
      allow create: if isClub();
      
      // Clubs can delete their own matches
      allow delete: if isClub() && resource.data.clubId == request.auth.uid;
    }
    
    match /clubs/{clubId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == clubId;
    }
    
    match /fans/{fanId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == fanId;
    }
  }
}